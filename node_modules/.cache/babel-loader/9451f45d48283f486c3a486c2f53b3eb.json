{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import'./index.css';import App from'./App';import*as serviceWorker from'./serviceWorker';import thunk from'redux-thunk';import rootReducer from'./redux/reducers/rootReducer';import{Provider}from'react-redux';import{insertMessage}from'./redux/actions/messageActions';import{insertGroup}from'./redux/actions/groupActions';import{BrowserRouter as Router}from'react-router-dom';import{createStore,applyMiddleware}from'redux';var store=createStore(rootReducer,applyMiddleware(thunk));// const webSocket = new WebSocket('ws://localhost:3003');\n// const webSocket = new WebSocket('ws://172.28.0.1:3003');\n// const webSocket = new WebSocket('ws://' + window.location.host.split(':')[0] + (window.location.port && `:${window.location.port}`) + '/websocket');\nvar webSocket=new WebSocket('ws://'+window.location.host.split(':')[0]+(window.location.port&&\":\".concat(window.location.port))+'/websocket/');webSocket.onmessage=function(message){var parsed=JSON.parse(message.data);if(parsed.channel==='messages'){store.dispatch(insertMessage(JSON.parse(parsed.message)));}if(parsed.channel==='groups'){store.dispatch(insertGroup(JSON.parse(parsed.message)));}};ReactDOM.render(React.createElement(Provider,{store:store},React.createElement(Router,null,React.createElement(App,null))),document.getElementById('root'));// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/macx/Desktop/final-project-superteam/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","thunk","rootReducer","Provider","insertMessage","insertGroup","BrowserRouter","Router","createStore","applyMiddleware","store","webSocket","WebSocket","window","location","host","split","port","onmessage","message","parsed","JSON","parse","data","channel","dispatch","render","document","getElementById","unregister"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,aAAT,KAA8B,gCAA9B,CACA,OAASC,WAAT,KAA4B,8BAA5B,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,KAAwC,kBAAxC,CACA,OAASC,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CAGA,GAAMC,CAAAA,KAAK,CAAGF,WAAW,CAACN,WAAD,CAAcO,eAAe,CAACR,KAAD,CAA7B,CAAzB,CAEA;AACA;AACA;AACA,GAAMU,CAAAA,SAAS,CAAG,GAAIC,CAAAA,SAAJ,CAAc,QAAUC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAV,EAAgDH,MAAM,CAACC,QAAP,CAAgBG,IAAhB,aAA4BJ,MAAM,CAACC,QAAP,CAAgBG,IAA5C,CAAhD,EAAsG,aAApH,CAAlB,CAEAN,SAAS,CAACO,SAAV,CAAsB,SAACC,OAAD,CAAa,CAC/B,GAAMC,CAAAA,MAAM,CAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,IAAnB,CAAf,CACA,GAAIH,MAAM,CAACI,OAAP,GAAmB,UAAvB,CAAmC,CAC/Bd,KAAK,CAACe,QAAN,CAAerB,aAAa,CAACiB,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACD,OAAlB,CAAD,CAA5B,EACH,CACD,GAAIC,MAAM,CAACI,OAAP,GAAmB,QAAvB,CAAiC,CAC7Bd,KAAK,CAACe,QAAN,CAAepB,WAAW,CAACgB,IAAI,CAACC,KAAL,CAAWF,MAAM,CAACD,OAAlB,CAAD,CAA1B,EACH,CACJ,CARD,CAUArB,QAAQ,CAAC4B,MAAT,CACI,oBAAC,QAAD,EAAU,KAAK,CAAEhB,KAAjB,EACI,oBAAC,MAAD,MACI,oBAAC,GAAD,MADJ,CADJ,CADJ,CAMMiB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANN,EASA;AACA;AACA;AACA5B,aAAa,CAAC6B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport thunk from 'redux-thunk';\nimport rootReducer from './redux/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport { insertMessage } from './redux/actions/messageActions';\nimport { insertGroup } from './redux/actions/groupActions';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n// const webSocket = new WebSocket('ws://localhost:3003');\n// const webSocket = new WebSocket('ws://172.28.0.1:3003');\n// const webSocket = new WebSocket('ws://' + window.location.host.split(':')[0] + (window.location.port && `:${window.location.port}`) + '/websocket');\nconst webSocket = new WebSocket('ws://' + window.location.host.split(':')[0] + (window.location.port && `:${window.location.port}`) + '/websocket/');\n\nwebSocket.onmessage = (message) => {\n    const parsed = JSON.parse(message.data);\n    if (parsed.channel === 'messages') {\n        store.dispatch(insertMessage(JSON.parse(parsed.message)));\n    }\n    if (parsed.channel === 'groups') {\n        store.dispatch(insertGroup(JSON.parse(parsed.message)));\n    }\n};\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}